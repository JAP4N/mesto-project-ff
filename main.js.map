{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/componets/modal.js","webpack://mesto-project-ff/./src/componets/api.js","webpack://mesto-project-ff/./src/componets/card.js","webpack://mesto-project-ff/./src/componets/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["// Открытие popup'a\r\nexport const openPopup = somePopup => {\r\n    somePopup.classList.add(\"popup_is-opened\");\r\n    document.addEventListener(\"keydown\", closePopupByEsc);\r\n};\r\n\r\n// Закрытие popup'a\r\nexport const closePopup = somePopup => {\r\n    somePopup.classList.remove(\"popup_is-opened\");\r\n    document.removeEventListener(\"keydown\", closePopupByEsc);\r\n};\r\n\r\n// Закрытие popup'a при нажатии на Esc\r\nconst closePopupByEsc = evt => {\r\n    if (evt.key === \"Escape\") {\r\n        const openPopup = document.querySelector(\".popup_is-opened\");\r\n        if (openPopup) {\r\n            closePopup(openPopup);\r\n        }\r\n    }\r\n};\r\n\r\n// Закрытие popup'а по overlay'ю\r\nconst closePopupByOverlay = (evt) => {\r\n    if (evt.target.classList.contains(\"popup_is-opened\")) {\r\n        closePopup(evt.target);\r\n    }\r\n};\r\n\r\n//Установка слушателей для закрытия popup'а по overlay'ю\r\nexport const setCloseModalByClickListeners = popupList => {\r\n    popupList.forEach(popup => {\r\n        popup.addEventListener(\"click\", closePopupByOverlay)\r\n    });\r\n};","const baseURL = 'https://mesto.nomoreparties.co';\r\nconst groupId = 'wff-cohort-17';\r\nconst token = '3da66894-1d7a-436c-a006-4109dd78abb3';\r\n\r\n//Функция проверки ответа сервера\r\nconst checkResponse = res => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\n//Функция загрузки информации о пользователе с сервера\r\nexport const loadUserData = () => {\r\n    return fetch(`${baseURL}/v1/${groupId}/users/me`, {\r\n        headers: {\r\n            authorization: token\r\n        }\r\n    })\r\n    .then(checkResponse);\r\n};\r\n\r\n//Функция загрузки карточек\r\nexport const loadCards = () => {\r\n     return fetch(`${baseURL}/v1/${groupId}/cards`, {\r\n        headers: {\r\n            authorization: token\r\n        }   \r\n    })\r\n    .then(checkResponse);\r\n};\r\n\r\n//Функция обновления данных профиля\r\nexport const updateUserData = (name, about) => {\r\n    return fetch(`${baseURL}/v1/${groupId}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          authorization: token,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          about\r\n        })\r\n    })\r\n    .then(checkResponse);\r\n};\r\n\r\n//Функция добавления новой карточки\r\nexport const addNewCard = (name, link) => {\r\n    return fetch(`${baseURL}/v1/${groupId}/cards`, {\r\n        method: 'POST',\r\n        headers: {\r\n          authorization: token,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          link\r\n        })\r\n    })\r\n    .then(checkResponse);\r\n};\r\n\r\n\r\n//Функция обновления колличества лайков под карточкой\r\nexport const toggleLike = (cardId, isLiked) => {\r\n    // Если isLiked истинно - DELETE. Если isLiked ложно - PUT\r\n    const method = isLiked ? 'DELETE' : 'PUT';\r\n\r\n    return fetch(`${baseURL}/v1/${groupId}/cards/likes/${cardId}`, {\r\n        method: method,\r\n        headers: {\r\n            authorization: token,\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    .then(checkResponse);\r\n};\r\n\r\n//Функция удаления карточки\r\nexport const deleteUserCard = (cardId) => {\r\n    return fetch(`${baseURL}/v1/${groupId}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            authorization: token\r\n        }\r\n    })\r\n    .then(checkResponse);\r\n};\r\n\r\n//Функция обновления аватара пользователя\r\nexport const updateUserAvatar = (avatar) => {\r\n    return fetch(`${baseURL}/v1/${groupId}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            authorization: token,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            avatar\r\n        })\r\n    })\r\n    .then(checkResponse);\r\n};\r\n\r\n","import { toggleLike, deleteUserCard } from './api.js'\r\n\r\n//Функция создания карточки\r\nexport function createCard ({name, link, likes, _id, owner}, userId, deleteCard, likeCardBtn, handleImageClick) {\r\n    const cardTemplate = document.querySelector(\"#card-template\").content;\r\n    const cardItem = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n    const cardTitle = cardItem.querySelector(\".card__title\");\r\n    const cardImage = cardItem.querySelector(\".card__image\");\r\n    const likeCounter = cardItem.querySelector(\".card__like-count\");\r\n    const likeButton = cardItem.querySelector(\".card__like-button\");\r\n    const deleteButton = cardItem.querySelector(\".card__delete-button\");\r\n\r\n    cardTitle.textContent = name; //Добавляет название карточки при ее создании\r\n    cardImage.src = link;            \r\n    cardImage.alt = name;  \r\n    likeCounter.textContent = likes.length;\r\n\r\n    //Проверяем, лайкнута ли карточка текущим пользователем\r\n    const isLiked = likes.some(like => like._id === userId)\r\n\r\n    if (isLiked) {\r\n        likeButton.classList.add(\"card__like-button_is-active\");\r\n    };\r\n\r\n    // Проверка на владельца карточки\r\n    if (owner._id === userId) {\r\n        deleteButton.addEventListener(\"click\", () => deleteCard(_id, cardItem));\r\n    }   else {\r\n        deleteButton.remove();\r\n    }\r\n\r\n    likeButton.addEventListener(\"click\", () => likeCardBtn(_id, likeCounter, likeButton));\r\n    cardImage.addEventListener(\"click\", () => handleImageClick(name, link));\r\n\r\n    return cardItem;\r\n}\r\n\r\n//удаление карточки\r\nexport const deleteCardBtn = (cardId, cardElement) => {\r\n    deleteUserCard(cardId)\r\n        .then(() => {\r\n            cardElement.remove();\r\n        })\r\n        .catch(err => {\r\n            console.error(`Ошибка при удалении карточки - ${err}`)\r\n        })\r\n};\r\n\r\n// функция добавления/удаления like'а\r\nexport const likeCardBtn = (cardId, likeCounter, likeButton) => {\r\n    const isLiked = likeButton.classList.contains(\"card__like-button_is-active\");\r\n\r\n    toggleLike(cardId, isLiked)\r\n        .then(updateCardData =>  {\r\n            likeCounter.textContent = updateCardData.likes.length;\r\n            likeButton.classList.toggle(\"card__like-button_is-active\");\r\n        })\r\n        .catch(err => {\r\n            console.error(`Ошибка при обновлении лайка - ${err}`);\r\n        });\r\n};\r\n","//Показать ошибку ввода\r\nconst showInputError = (formElement, inputElement, errorMessage, inputErrorClass, errorClass) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n    inputElement.classList.add(inputErrorClass)\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(errorClass);\r\n};\r\n\r\n//Скрыть ошибку ввода\r\nconst hideInputError = (formElement, inputElement, inputErrorClass, errorClass) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n    inputElement.classList.remove(inputErrorClass)\r\n    errorElement.classList.remove(errorClass);\r\n    errorElement.textContent = \"\";\r\n\r\n};\r\n\r\n//Проверка валидности поля popap'а\r\nconst isValid = (formElement, inputElement, inputErrorClass, errorClass) => {\r\n    if (inputElement.validity.patternMismatch) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    }   else {\r\n        inputElement.setCustomValidity(\"\");\r\n    }\r\n\r\n    if (!inputElement.validity.valid) {\r\n        showInputError(formElement, inputElement, inputElement.validationMessage, inputErrorClass, errorClass);\r\n    } else {\r\n        hideInputError(formElement, inputElement, inputErrorClass, errorClass);\r\n    }\r\n}\r\n\r\n//Проверка на наличие невалидных полей\r\nconst hasInvalidInput = (inputList) => {\r\n    return inputList.some(inputElement => {\r\n        return !inputElement.validity.valid;\r\n    })\r\n};\r\n\r\n//отслеживание состояния кнопки\r\nconst toggleButtonState = (inputList, buttonElement, inactiveButtonClass) => {\r\n    if (hasInvalidInput(inputList)) {\r\n        buttonElement.disabled = true;\r\n        buttonElement.classList.add(inactiveButtonClass);\r\n    } else {\r\n        buttonElement.disabled = false;\r\n        buttonElement.classList.remove(inactiveButtonClass);\r\n    }\r\n}\r\n\r\n//Установка слушателей для полей\r\nconst setEventListeners = (formElement, {\r\n    inputSelector,\r\n    submitButtonSelector,\r\n    inactiveButtonClass,\r\n    inputErrorClass,\r\n    errorClass\r\n  }) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n    const buttonElement = formElement.querySelector(submitButtonSelector);\r\n\r\n    toggleButtonState(inputList, buttonElement, inactiveButtonClass);\r\n\r\n    inputList.forEach(inputElement => {\r\n        inputElement.addEventListener(\"input\", () => {\r\n\r\n            isValid(formElement, inputElement, inputErrorClass, errorClass)\r\n            toggleButtonState(inputList, buttonElement, inactiveButtonClass);\r\n        });\r\n    });\r\n};\r\n\r\n//Функция активации валидации\r\nexport const enableValidation = ({\r\n    formSelector,\r\n    ...rest\r\n  }) => {\r\n\r\n\r\n    const formList = Array.from(document.querySelectorAll(formSelector))\r\n\r\n    formList.forEach(formElement => {\r\n        setEventListeners(formElement, {\r\n            formSelector,\r\n            ...rest\r\n          });\r\n    });\r\n};\r\n\r\n//Функция очистки ошибок валидации\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n    inputList.forEach((inputElement) => {\r\n        hideInputError(formElement, inputElement, validationConfig.inputErrorClass, validationConfig.errorClass);\r\n    });\r\n\r\n    toggleButtonState(inputList, buttonElement, validationConfig.inactiveButtonClass);\r\n};","import '/src/pages/index.css';\r\nimport '../componets/api.js';\r\n\r\n//import\r\nimport { openPopup, closePopup, setCloseModalByClickListeners } from '../componets/modal.js'\r\nimport { likeCardBtn, createCard, deleteCardBtn } from '../componets/card.js'\r\nimport { enableValidation, clearValidation } from '../componets/validation.js'\r\nimport {loadUserData, loadCards, updateUserData, addNewCard, updateUserAvatar } from '../componets/api.js'\r\n\r\n//DOM main content\r\nconst mainContent = document.querySelector(\".content\")\r\n\r\n//Слушатели появления popup'ов\r\nconst profileEditButton = mainContent.querySelector(\".profile__edit-button\");\r\nconst profileAddButton = document.querySelector(\".profile__add-button\");\r\nconst profileEditAvatar = document.querySelector(\".profile__image\");\r\n\r\n//Слушатели ичезновения popup'ов\r\nconst popupCloseBtnAll = document.querySelectorAll(\".popup__close\");\r\n\r\n//form\r\nconst editForm = document.forms.edit_profile;\r\nconst newPlace = document.forms.new_place;\r\nconst editAvatar = document.forms.edit_avatar;\r\n\r\n//form button\r\nconst popupButtonEdit = editForm.querySelector(\".popup__button-edit\");\r\nconst popupButtonNewPlace = newPlace.querySelector(\".popup__button-new-place\");\r\nconst popupButtonUrl = editAvatar.querySelector(\".popup__button-url\");\r\n\r\n//переменная id пользователя\r\nlet userId;\r\n\r\n//DOM popup\r\nconst popupList = document.querySelectorAll(\".popup\");\r\nconst popupEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst popupEditAvatar = document.querySelector(\".popup_type_edit-avatar\");\r\n\r\n//Поиск form для конкретного Popup'а \r\nconst editFormElement = popupEdit.querySelector('.popup__form');\r\nconst addCardFormElement = popupNewCard.querySelector('.popup__form');\r\nconst avatarFormElement = popupEditAvatar.querySelector('.popup__form');\r\n\r\n//Темплейт карточки\r\nconst cardsContainer = document.querySelector(\".places__list\");\r\n\r\n//Контент карточки\r\nconst popupCaption = popupTypeImage.querySelector(\".popup__caption\");\r\nconst popupImage = popupTypeImage.querySelector(\".popup__image\");\r\n\r\n//Поля формы создания карточки IMG\r\nconst nameCardPopup = document.querySelector(\".popup__input_type_card-name\");\r\nconst linkImgPopup = document.querySelector(\".popup__input_type_url\");\r\n\r\n//Поля формы редактирования профиля\r\nconst nameInput = document.querySelector(\".popup__input_type_name\");\r\nconst jobInput = document.querySelector(\".popup__input_type_description\");\r\n\r\n//поля вывода карточек на страницу\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileAvatar = document.querySelector(\".profile__image\");\r\n\r\n//Значение поля \r\nconst valueAvatarLink = editAvatar.querySelector(\".popup__input_type_url\");\r\n\r\n//Конфиг для валидации\r\nconst validationConfig = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_inactive',\r\n    inputErrorClass: 'form__input_type_error',\r\n    errorClass: 'form__input-error_active'\r\n}\r\n\r\n//Загрузка данных пользователя и карточек\r\nPromise.all([loadUserData(), loadCards()])\r\n    .then(([userData, cards]) => {\r\n        userId = userData._id; //Присваиваем значение id пользователя глобальной переменной\r\n        profileTitle.textContent = userData.name;\r\n        profileDescription.textContent = userData.about;\r\n        profileAvatar.src = userData.avatar;\r\n\r\n        cards.forEach(cardData => {\r\n            const newCardItem = createCard({...cardData, owner: cardData.owner}, userId, deleteCardBtn, likeCardBtn, handleImageClick);\r\n            cardsContainer.append(newCardItem);\r\n        });\r\n    })\r\n    .catch(err => {\r\n        console.error(`Ошибка при загрузке данных - ${err}`);\r\n    });\r\n\r\n//ручное создание карточки\r\nconst handleCreateCard = evt => {\r\n    evt.preventDefault();\r\n\r\n    const name = nameCardPopup.value; \r\n    const link = linkImgPopup.value;\r\n\r\n    renderLoading(true, popupButtonNewPlace);\r\n\r\n    addNewCard(name, link)\r\n        .then(newCard => {\r\n            userId = newCard._id;\r\n            const newCardItem = createCard({...newCard, owner: { _id: userId }}, userId, deleteCardBtn, likeCardBtn, handleImageClick);\r\n            cardsContainer.prepend(newCardItem);\r\n            // Очищаем форму\r\n            newPlace.reset();\r\n            // Закрываем форму\r\n            closePopup(popupNewCard);\r\n        })\r\n        .catch(err => {\r\n            console.error(`Ошибка при добавлении новой карточки - ${err}`);\r\n        })\r\n        .finally(() => {\r\n            renderLoading(false, popupButtonNewPlace);\r\n        });\r\n};\r\n\r\n//Изменение данных профиля\r\nconst  handleFormEditProfile = evt => {\r\n    evt.preventDefault();\r\n\r\n    const name = nameInput.value;\r\n    const job = jobInput.value;\r\n\r\n    renderLoading(true, popupButtonEdit);\r\n\r\n    updateUserData(name, job)\r\n    .then(newUser => {\r\n        profileTitle.textContent = newUser.name;\r\n        profileDescription.textContent = newUser.about;\r\n        // Закрываем форму\r\n        closePopup(popupEdit);\r\n    })\r\n    .catch(err => {\r\n        console.error(`Ошибка при обновлении данных профиля - ${err}`);\r\n    })\r\n    .finally(() => {\r\n        renderLoading(false, popupButtonEdit);\r\n    });\r\n};\r\n\r\n//Обновление аватара пользователя\r\nconst handleEditAvatar = evt => {\r\n    evt.preventDefault();\r\n\r\n    const avatarLink = valueAvatarLink.value;\r\n\r\n    renderLoading(true, popupButtonUrl);\r\n\r\n    updateUserAvatar(avatarLink)\r\n        .then(newUser => {\r\n            profileAvatar.src = newUser.avatar;\r\n            \r\n            // Закрываем форму\r\n            closePopup(popupEditAvatar);\r\n        })\r\n        .catch(err => {\r\n            console.error(`Ошибка при обновлении аватара профиля - ${err}`)\r\n        })\r\n        .finally(() => {\r\n            renderLoading(false, popupButtonUrl);\r\n        });\r\n};\r\n\r\n//Функция открытия модального окна картинки\r\nexport const handleImageClick = (name, link) => {\r\n    popupCaption.textContent = name;\r\n    popupImage.src = link;\r\n    popupImage.alt = name;\r\n\r\n    openPopup(popupTypeImage);\r\n};\r\n\r\n//Вывести popup edit на страницу\r\nprofileEditButton.addEventListener(\"click\", () => {\r\n    nameInput.value = profileTitle.textContent;\r\n    jobInput.value  = profileDescription.textContent;\r\n\r\n    //Очистка ошибок валидации\r\n    clearValidation(editFormElement, validationConfig);\r\n\r\n    openPopup(popupEdit);\r\n});\r\n\r\n//Вывести popup addCard на страницу\r\nprofileAddButton.addEventListener(\"click\", () => {\r\n    //Очистка ошибок валидации\r\n    clearValidation(addCardFormElement, validationConfig);\r\n\r\n    openPopup(popupNewCard);\r\n});\r\n\r\n//Вывести popup EditAvatar на страницу\r\nprofileEditAvatar.addEventListener(\"click\", () => {\r\n    // Очищаем форму\r\n    editAvatar.reset();\r\n\r\n    //Очистка ошибок валидации\r\n    clearValidation(avatarFormElement, validationConfig);\r\n\r\n    openPopup(popupEditAvatar);\r\n});\r\n\r\n//закрыть popup\r\npopupCloseBtnAll.forEach(item => {\r\n    item.addEventListener(\"click\", evt => {\r\n        const popup = evt.target.closest(\".popup\")\r\n        closePopup(popup);\r\n    });\r\n});\r\n\r\n//Отображение загрузки данных\r\nconst renderLoading = (isLoading, inputElement) => {\r\n    if (isLoading) {\r\n        inputElement.textContent = \"Сохранить...\";\r\n    } else if (!isLoading) {\r\n        inputElement.textContent = \"Сохранить\";\r\n    }\r\n  };\r\n\r\n//Закрытие popup по клику на overlay\r\nsetCloseModalByClickListeners(popupList);\r\n\r\n//Слушатель изменения данных профиля\r\neditForm.addEventListener(\"submit\", handleFormEditProfile);\r\n\r\n//Слушатель добавления карточки из popup'a\r\nnewPlace.addEventListener(\"submit\", handleCreateCard);\r\n\r\n//Слушатель обновления аватара пользователя\r\neditAvatar.addEventListener(\"submit\", handleEditAvatar);\r\n\r\n//Активация валидации\r\nenableValidation(validationConfig);"],"names":["openPopup","somePopup","classList","add","document","addEventListener","closePopupByEsc","closePopup","remove","removeEventListener","evt","key","querySelector","closePopupByOverlay","target","contains","baseURL","groupId","token","checkResponse","res","ok","json","Promise","reject","concat","status","createCard","_ref","userId","deleteCard","likeCardBtn","handleImageClick","name","link","likes","_id","owner","cardItem","content","cloneNode","cardTitle","cardImage","likeCounter","likeButton","deleteButton","textContent","src","alt","length","some","like","deleteCardBtn","cardId","cardElement","fetch","method","headers","authorization","then","deleteUserCard","catch","err","console","error","isLiked","toggleLike","updateCardData","toggle","hideInputError","formElement","inputElement","inputErrorClass","errorClass","errorElement","id","toggleButtonState","inputList","buttonElement","inactiveButtonClass","validity","valid","hasInvalidInput","disabled","clearValidation","validationConfig","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","profileEditButton","profileAddButton","profileEditAvatar","popupCloseBtnAll","editForm","forms","edit_profile","newPlace","new_place","editAvatar","edit_avatar","popupButtonEdit","popupButtonNewPlace","popupButtonUrl","popupList","popupEdit","popupNewCard","popupTypeImage","popupEditAvatar","editFormElement","addCardFormElement","avatarFormElement","cardsContainer","popupCaption","popupImage","nameCardPopup","linkImgPopup","nameInput","jobInput","profileTitle","profileDescription","profileAvatar","valueAvatarLink","formSelector","all","_ref2","userData","cards","about","avatar","cardData","newCardItem","_objectSpread","append","value","reset","item","popup","closest","rest","renderLoading","isLoading","setCloseModalByClickListeners","preventDefault","job","body","JSON","stringify","updateUserData","newUser","finally","addNewCard","newCard","prepend","avatarLink","_objectWithoutProperties","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners"],"sourceRoot":""}